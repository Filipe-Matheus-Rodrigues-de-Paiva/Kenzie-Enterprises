// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}


model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Sector {
  id                    String  @id @default(uuid())
  description           String  @unique
  companies             Company[] @relation()
}

model Company {
  id                    String  @id @default(uuid())
  name                  String  @unique  
  description           String
  sector                Sector  @relation(fields: [sector_uuid], references: [id])
  sector_uuid           String
  departments           Department[]
}

model Department {
  id       String  @id @default(uuid())
  name     String
  description String
  companyId String
  company   Company   @relation(fields: [companyId], references: [id])
  users     User[]    @relation()
}

model User {
  id                String     @id @default(uuid())
  name              String?
  email             String     @unique
  emailVerified     DateTime?
  password          String
  professional_level String     @default("JÃºnior")
  kind_of_work      String?
  department_uuid   String?   // Adicione este campo
  is_superuser      Boolean?  @default(false)
  image             String?
  accounts          Account[]
  sessions          Session[]
  department        Department? @relation(fields: [department_uuid], references: [id])
}
